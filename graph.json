{
  "graph": {
    "nodes": {
      "graphql": {
        "name": "graphql",
        "type": "lib",
        "data": {
          "root": "packages/graphql",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/graphql",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                },
                "scriptContent": "npx vitest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "packages/graphql",
                "command": "tsc --noEmit -p tsconfig.lib.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.lib.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects graphql --includeDependentProjects -- pnpm exec nx build-deps graphql"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/graphql",
                "main": "packages/graphql/src/index.ts",
                "tsConfig": "packages/graphql/tsconfig.build.json",
                "assets": [
                  "packages/graphql/*.md"
                ],
                "format": [
                  "cjs"
                ],
                "generatePackageJson": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test"
              ]
            },
            "js": {
              "packageName": "@earthquake/graphql",
              "packageMain": "./index.cjs",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "graphql",
          "tags": [
            "npm:private"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/graphql/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "types": {
        "name": "types",
        "type": "lib",
        "data": {
          "root": "packages/types",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/types",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{workspaceRoot}/coverage/packages/types"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "packages/types",
                "command": "tsc --noEmit -p tsconfig.lib.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.lib.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects types --includeDependentProjects -- pnpm exec nx build-deps types"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/types",
                "main": "packages/types/src/index.ts",
                "tsConfig": "packages/types/tsconfig.lib.json",
                "assets": [
                  "packages/types/*.md"
                ],
                "format": [
                  "cjs"
                ],
                "generatePackageJson": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@earthquake/types",
              "packageMain": "./index.cjs",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "types",
          "tags": [
            "npm:private"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/types/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "api-e2e": {
        "name": "api-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/api-e2e",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{e2eProjectRoot}"
              ],
              "options": {
                "jestConfig": "apps/api-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": [
                "api:build"
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "api-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "implicitDependencies": [
            "api"
          ],
          "tags": []
        }
      },
      "web-e2e": {
        "name": "web-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/web-e2e",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/example.spec.ts",
                "e2e-ci"
              ]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "apps/web-e2e",
                "command": "playwright test"
              },
              "parallelism": false,
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/playwright-report"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/web-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "../../dist/.playwright/apps/web-e2e/playwright-report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "../../dist/.playwright/apps/web-e2e/playwright-report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=../../dist/.playwright/apps/web-e2e/test-output/src-example-spec-ts"
              },
              "parallelism": true,
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/test-output/src-example-spec-ts",
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/playwright-report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "dependsOn": [
                "^build"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/playwright-report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "parallelism": false,
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {}
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/web-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/web-e2e/src",
          "tags": [],
          "implicitDependencies": [
            "web"
          ]
        }
      },
      "db": {
        "name": "db",
        "type": "lib",
        "data": {
          "root": "packages/db",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/db",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                },
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "packages/db",
                "command": "tsc --noEmit -p tsconfig.lib.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.lib.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects db --includeDependentProjects -- pnpm exec nx build-deps db"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "seed": {
              "executor": "nx:run-script",
              "options": {
                "script": "seed"
              },
              "metadata": {
                "scriptContent": "npx prisma generate && ts-node seed-data.ts",
                "runCommand": "pnpm run seed"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/db",
                "main": "packages/db/src/index.ts",
                "tsConfig": "packages/db/tsconfig.build.json",
                "assets": [
                  "packages/db/*.md"
                ],
                "format": [
                  "cjs"
                ],
                "generatePackageJson": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test",
                "test:watch",
                "seed"
              ]
            },
            "js": {
              "packageName": "@earthquake/db",
              "packageMain": "./index.cjs",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "db",
          "tags": [
            "npm:private"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/db/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui": {
        "name": "ui",
        "type": "lib",
        "data": {
          "root": "packages/ui",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/ui",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "../../coverage/packages/ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/packages/ui"
              },
              "configurations": {
                "development": {
                  "mode": "development"
                },
                "production": {
                  "mode": "production"
                }
              },
              "parallelism": true
            },
            "serve": {
              "options": {
                "cwd": "packages/ui",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "options": {
                "cwd": "packages/ui",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "dependsOn": [
                "build"
              ],
              "options": {
                "cwd": "packages/ui",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "packages/ui",
                "command": "tsc --noEmit -p tsconfig.lib.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.lib.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects ui --includeDependentProjects -- pnpm exec nx build-deps ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {
                "packageRoot": "dist/packages/ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 6006,
                "configDir": "packages/ui/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": [
                "{options.outputDir}"
              ],
              "options": {
                "outputDir": "dist/storybook/ui",
                "configDir": "packages/ui/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true
            }
          },
          "projectType": "library",
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@earthquake/ui",
              "packageExports": {
                ".": {
                  "import": "./lib/index.js",
                  "require": "./lib/index.js"
                },
                "./lib/*": {
                  "import": "./lib/*",
                  "require": "./lib/*"
                },
                "./tailwind.config.js": {
                  "import": "./tailwind.config.js",
                  "require": "./tailwind.config.js"
                },
                "./globals.css": "./dist/lib/globals.css"
              },
              "packageMain": "./index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "ui",
          "tags": [
            "npm:public"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ui/src",
          "release": {
            "version": {
              "generatorOptions": {
                "packageRoot": "dist/{projectRoot}",
                "currentVersionResolver": "git-tag",
                "fallbackCurrentVersionResolver": "disk"
              }
            }
          },
          "implicitDependencies": []
        }
      },
      "api": {
        "name": "api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/coverage/apps/api"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/api",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\"}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/api",
                "format": [
                  "cjs"
                ],
                "bundle": false,
                "main": "apps/api/src/main.ts",
                "tsConfig": "apps/api/tsconfig.app.json",
                "assets": [
                  "apps/api/src/assets"
                ],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "development": {},
                "production": {
                  "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                      ".js": ".js"
                    }
                  }
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "api:build:development"
                },
                "production": {
                  "buildTarget": "api:build:production"
                }
              },
              "parallelism": true
            }
          },
          "name": "api",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/api/src",
          "projectType": "application",
          "dependencies": [
            {
              "type": "static",
              "source": "^packages/db$",
              "target": "^packages/db$"
            },
            {
              "type": "static",
              "source": "^packages/graphql$",
              "target": "^packages/graphql$"
            }
          ],
          "tags": [],
          "implicitDependencies": [],
          "namedInputs": {}
        }
      },
      "web": {
        "name": "web",
        "type": "app",
        "data": {
          "root": "apps/web",
          "targets": {
            "build": {
              "executor": "@nx/next:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/web"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/web"
                },
                "production": {}
              },
              "parallelism": true
            },
            "dev": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "web:build",
                "dev": true
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "options": {
                "cwd": "apps/web",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "options": {
                "cwd": "apps/web",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects web --includeDependentProjects -- pnpm exec nx build-deps web"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/web",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\"}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/coverage/apps/web"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "web:build",
                "dev": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "web:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "web:build:production",
                  "dev": false
                }
              },
              "parallelism": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "web:build:production"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@earthquake/web",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@earhquake/source": {
        "name": "@earhquake/source",
        "type": "lib",
        "data": {
          "root": ".",
          "name": "@earhquake/source",
          "includedScripts": [],
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@earthquake/source",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "local-registry": {
              "executor": "@nx/js:verdaccio",
              "options": {
                "port": 4873,
                "config": ".verdaccio/config.yml",
                "storage": "tmp/local-registry/storage"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "graphql": [],
      "types": [],
      "api-e2e": [
        {
          "source": "api-e2e",
          "target": "api",
          "type": "implicit"
        }
      ],
      "web-e2e": [
        {
          "source": "web-e2e",
          "target": "web",
          "type": "implicit"
        }
      ],
      "db": [],
      "ui": [],
      "api": [
        {
          "source": "api",
          "target": "graphql",
          "type": "static"
        },
        {
          "source": "api",
          "target": "db",
          "type": "static"
        }
      ],
      "web": [
        {
          "source": "web",
          "target": "ui",
          "type": "static"
        },
        {
          "source": "web",
          "target": "graphql",
          "type": "static"
        },
        {
          "source": "web",
          "target": "types",
          "type": "static"
        }
      ],
      "@earhquake/source": [
        {
          "source": "@earhquake/source",
          "target": "ui",
          "type": "static"
        }
      ]
    }
  }
}